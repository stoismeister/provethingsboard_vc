{
  "entityType" : "WIDGETS_BUNDLE",
  "entity" : {
    "alias" : "alberto_test",
    "description" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGETS_BUNDLE",
      "id" : "d66fd8f0-b906-11ed-a76d-9955dd563d2d"
    },
    "image" : null,
    "title" : "Alberto - Test"
  },
  "widgets" : [ {
    "alias" : "rpc_command",
    "name" : "RPC command",
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "rpc",
      "sizeX" : 4,
      "sizeY" : 2,
      "resources" : [ ],
      "templateHtml" : "<!DOCTYPE html>\r\n<html lang=\"it\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Widget RPC</title>\r\n    <!-- Link alle librerie Bootstrap -->\r\n    <link rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n    <script\r\n        src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\r\n    </script>\r\n    <script\r\n        src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\">\r\n    </script>\r\n    <script\r\n        src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\">\r\n    </script>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"method-name\"\r\n                        style=\"margin-bottom: 0px\">Method\r\n                        name:</label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                        id=\"method-name\" value=\"setValue\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"command-type\"\r\n                        style=\"margin-bottom: 0px\">Command\r\n                        type:</label>\r\n                    <select class=\"form-control\"\r\n                        id=\"command-type\">\r\n                        <option value=\"\" disabled selected>\r\n                            Seleziona...</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"key\"\r\n                        style=\"margin-bottom: 0px\">Chiave:</label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                        id=\"key\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"command\"\r\n                        style=\"margin-bottom: 0px\">Comando:</label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                        id=\"command\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input type=\"radio\"\r\n                            class=\"form-check-input\"\r\n                            id=\"one-way\" name=\"rpc-mode\"\r\n                            value=\"one-way\" checked>\r\n                        <label for=\"one-way\"\r\n                            class=\"form-check-label\">One-way\r\n                            command</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input type=\"radio\"\r\n                            class=\"form-check-input\"\r\n                            id=\"two-way\" name=\"rpc-mode\"\r\n                            value=\"two-way\">\r\n                        <label for=\"two-way\"\r\n                            class=\"form-check-label\" style=\"margin-bottom: 5px\">Two-way\r\n                            command</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <button id=\"send-command\"\r\n                    class=\"btn btn-primary btn-block\">Invia\r\n                    comando</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div id=\"response-field\" class=\"mt-3\" ></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>",
      "templateCss" : "div {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n",
      "controllerScript" : "self.onInit = function() {\r\n    const methodNameInput = document.getElementById(\r\n        \"method-name\");\r\n    const commandTypeSelect = document.getElementById(\r\n        \"command-type\");\r\n    const commandParamsKeyInput = document\r\n        .getElementById(\"key\");\r\n    const commandParamsValueInput = document\r\n        .getElementById(\"command\");\r\n    const oneWayRadio = document.getElementById(\r\n        \"one-way\");\r\n    const sendCommandButton = document.getElementById(\r\n        \"send-command\");\r\n    const responseField = document.createElement(\"div\");\r\n    responseField.classList.add(\"mt-3\");\r\n    sendCommandButton.after(responseField);\r\n    \r\n    commandParamsKeyInput.disabled = true;\r\n\r\n    // Carica il JSON dal server \r\n    fetch(\r\n            \"https://raw.githubusercontent.com/firefox73/Colora/main/Command/command_MCU\")\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n            const comandi = json[0].Comandi;\r\n            for (const categoryKey in comandi) {\r\n                if (comandi.hasOwnProperty(\r\n                        categoryKey)) {\r\n                    const category = comandi[\r\n                        categoryKey];\r\n                    for (const commandKey in\r\n                            category) {\r\n                        if (category.hasOwnProperty(\r\n                                commandKey)) {\r\n                            const command =\r\n                                category[\r\n                                commandKey];\r\n                            const option = document\r\n                                .createElement(\r\n                                    \"option\");\r\n                            option.value = command\r\n                                .esempio;\r\n                            option.setAttribute(\r\n                                \"data-key\",\r\n                                command.cmd);\r\n                            option.setAttribute(\r\n                                \"data-value-suffix\",\r\n                                \";\");\r\n                            option.textContent =\r\n                                command.descrizione;\r\n                            commandTypeSelect\r\n                                .appendChild(\r\n                                option);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    commandTypeSelect.addEventListener(\"change\",\r\n        function() {\r\n            const selectedOption = this.options[this\r\n                .selectedIndex];\r\n            const commandKey = selectedOption\r\n                .getAttribute(\"data-key\");\r\n            const commandValueSuffix =\r\n                selectedOption.getAttribute(\r\n                    \"data-value-suffix\");\r\n            const commandExample = selectedOption\r\n                .value;\r\n            const commandValue = commandExample\r\n                .replace(commandKey, \"\").replace(\r\n                    commandValueSuffix, \"\");\r\n            commandParamsKeyInput.value = \"###\" +\r\n            commandKey;\r\n            commandParamsValueInput.value =\r\n                commandValue;\r\n        });\r\n\r\n    sendCommandButton.addEventListener(\"click\",\r\n        function() {\r\n            const rpcMethod = methodNameInput.value;\r\n            const rpcParams = commandParamsKeyInput\r\n                .value + commandParamsValueInput\r\n                .value;\r\n            const oneWayElseTwoWay = oneWayRadio\r\n                .checked;\r\n\r\n            sendRpcCommand(rpcMethod, rpcParams,\r\n                oneWayElseTwoWay,\r\n                function(response) {\r\n                    if (oneWayElseTwoWay) {\r\n                        responseField\r\n                            .innerHTML =\r\n                            \"Comando oneWay - nessuna risposta attesa\";\r\n                    } else if (response) {\r\n                        responseField\r\n                            .innerHTML =\r\n                            `Risposta del device: ${JSON.stringify(response)}`;\r\n                    } else {\r\n                        responseField\r\n                            .innerHTML =\r\n                            \"Nessuna risposta dal device\";\r\n                    }\r\n                });\r\n        });\r\n\r\n    function sendRpcCommand(rpcMethod, expression,\r\n        oneWayElseTwoWay, callback) {\r\n        var rpcParams = expression;\r\n        var timeout =\r\n        5000; // Imposta il timeout desiderato\r\n\r\n        var commandObservable;\r\n        if (oneWayElseTwoWay) {\r\n            commandObservable = self.ctx.controlApi\r\n                .sendOneWayCommand(rpcMethod, rpcParams,\r\n                    timeout);\r\n        } else {\r\n            commandObservable = self.ctx.controlApi\r\n                .sendTwoWayCommand(rpcMethod, rpcParams,\r\n                    timeout);\r\n        }\r\n        commandObservable.subscribe(\r\n            function(response) {\r\n                if (oneWayElseTwoWay) {\r\n                    console.log(\r\n                        \"Command was successfully received by device. No response body because of one way command mode.\"\r\n                        );\r\n                    callback();\r\n                } else {\r\n                    console.log(\r\n                        \"Response from device:\",\r\n                        response);\r\n                    if (callback) {\r\n                        callback(response);\r\n                    }\r\n                }\r\n            },\r\n            function(rejection) {\r\n                console.log(\r\n                    \"Failed to send command to the device: Status:\",\r\n                    rejection.status,\r\n                    \"Status text:\", rejection\r\n                    .statusText);\r\n                if (!oneWayElseTwoWay) {\r\n                    callback();\r\n                }\r\n            }\r\n        );\r\n    }\r\n};",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "{}\n",
      "settingsDirective" : "tb-gpio-control-widget-settings",
      "defaultConfig" : "{\"targetDeviceAliases\":[],\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"parseGpioStatusFunction\":\"return body[pin] === true;\",\"gpioStatusChangeRequest\":{\"method\":\"setGpioStatus\",\"paramsBody\":\"{\\n   \\\"pin\\\": \\\"{$pin}\\\",\\n   \\\"enabled\\\": \\\"{$enabled}\\\"\\n}\"},\"requestTimeout\":500,\"switchPanelBackgroundColor\":\"#b71c1c\",\"gpioStatusRequest\":{\"method\":\"getGpioStatus\",\"paramsBody\":\"{}\"},\"gpioList\":[{\"pin\":1,\"label\":\"GPIO 1\",\"row\":0,\"col\":0,\"_uniqueKey\":0},{\"pin\":2,\"label\":\"GPIO 2\",\"row\":0,\"col\":1,\"_uniqueKey\":1},{\"pin\":3,\"label\":\"GPIO 3\",\"row\":1,\"col\":0,\"_uniqueKey\":2}]},\"title\":\"RPC command\"}"
    },
    "bundleAlias" : "alberto_test",
    "createdTime" : 1679568120989,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "57c7f4d0-c967-11ed-a76d-9955dd563d2d"
    },
    "tenantId" : {
      "entityType" : "TENANT",
      "id" : "64ee8810-2de8-11ed-9397-cd2dc17441ed"
    }
  }, {
    "alias" : "timer",
    "name" : "timer",
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "rpc",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Cron Scheduler</title>\r\n    <link\r\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\r\n        rel=\"stylesheet\"\r\n        integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\r\n        crossorigin=\"anonymous\">\r\n</head>\r\n\r\n<body>\r\n\r\n    <nav\r\n        class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div class=\"container-fluid\">\r\n            <ul class=\"nav nav-tabs\">\r\n                <li class=\"nav-item mb-1\">\r\n                    <a class=\"nav-link\" id=\"seconds-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        data-bs-target=\"#seconds\">Secondi</a>\r\n                </li>\r\n                <li class=\"nav-item mb-1\">\r\n                    <a class=\"nav-link\" id=\"minutes-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        data-bs-target=\"#minutes\">Minuti</a>\r\n                </li>\r\n                <li class=\"nav-item mb-1\">\r\n                    <a class=\"nav-link\" id=\"hourly-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        data-bs-target=\"#hourly\">Orario</a>\r\n                </li>\r\n                <li class=\"nav-item mb-1\">\r\n                    <a class=\"nav-link\" id=\"daily-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        data-bs-target=\"#daily\">Giornaliero</a>\r\n                </li>\r\n                <li class=\"nav-item mb-1\">\r\n                    <a class=\"nav-link\" id=\"weekly-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        data-bs-target=\"#weekly\">Settimanale</a>\r\n                </li>\r\n                <li class=\"nav-item mb-1\">\r\n                    <a class=\"nav-link\" id=\"monthly-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        data-bs-target=\"#monthly\">Mensile</a>\r\n                </li>\r\n\r\n                <li class=\"nav-item mb1\">\r\n                    <a class=\"nav-link\" id=\"advanced-tab\"\r\n                        data-bs-toggle=\"tab\"\r\n                        href=\"#advanced\">\r\n                        Avanzato\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n\r\n\r\n    <div class=\"container mb-2\" id=\"content\">\r\n\r\n        <div id=\"seconds\" class=\"tab-pane active\">\r\n            <div class=\"form-group\"\r\n                style=\"display: flex; align-items: center;\">\r\n                <label\r\n                    style=\"margin-right: 10px;\">Ogni</label>\r\n                <select\r\n                    class=\"seconds-dropdown form-control\"\r\n                    style=\"margin-right: 10px;\"></select>\r\n                <label>secondi</label>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Alle ore</label>\r\n                <div class=\"d-inline-flex\">\r\n                    <select\r\n                        class=\"hour-dropdown form-control mr-2\"></select>\r\n                    <label>:</label>\r\n                    <select\r\n                        class=\"minute-dropdown form-control ml-2\"></select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Giorno del mese</label>\r\n                <input type=\"text\" id=\"seconds-day-of-month\"\r\n                    value=\"*\" class=\"form-control\"\r\n                    oninput=\"validateDayOfMonthInput(this);\">\r\n                <p class=\"text-muted\"\r\n                    style=\"font-size: 11px;\">Separare i\r\n                    numeri con una virgola per inserire più\r\n                    giorni (es. 1,5,7... ecc.)</p>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Nel mese di</label>\r\n                <select id=\"seconds-month-dropdown\"\r\n                    class=\"month-dropdown form-control\">\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Giorni della settimana:</label><br>\r\n                <div id=\"seconds-days-of-week\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"minutes\" class=\"tab-pane\">\r\n            <div class=\"form-group\"\r\n                style=\"display: flex; align-items: center;\">\r\n                <label\r\n                    style=\"margin-right: 10px;\">Ogni</label>\r\n                <select class=\"minute-dropdown form-control\"\r\n                    style=\"margin-right: 10px;\"></select>\r\n                <label>minuti</label>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Alle ore</label>\r\n                <div\r\n                    class=\"d-inline-flex align-items-center\">\r\n                    <select\r\n                        class=\"hour-dropdown form-control mr-2\"></select>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <label>Giorno del mese</label>\r\n                <input type=\"text\" id=\"minutes-day-of-month\"\r\n                    value=\"*\" class=\"form-control\"\r\n                    oninput=\"validateDayOfMonthInput(this);\">\r\n                <p class=\"text-muted\"\r\n                    style=\"font-size: 11px;\">Separare i\r\n                    numeri con una virgola per inserire più\r\n                    giorni (es. 1,5,7... ecc.)</p>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Nel mese di</label>\r\n                <select id=\"minutes-month-dropdown\"\r\n                    class=\"month-dropdown form-control\">\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Giorni della settimana:</label><br>\r\n                <div id=\"minutes-days-of-week\"></div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"hourly\" class=\"tab-pane\">\r\n            <div class=\"form-group\"\r\n                style=\"display: flex; align-items: center;\">\r\n                <label\r\n                    style=\"margin-right: 10px;\">Ogni</label>\r\n                <select class=\"hour-dropdown form-control\"\r\n                    style=\"margin-right: 10px;\"></select>\r\n                <label>ore</label>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Giorno del mese</label>\r\n                <input type=\"text\" id=\"hourly-day-of-month\"\r\n                    value=\"*\" class=\"form-control\"\r\n                    oninput=\"validateDayOfMonthInput(this);\">\r\n                <p class=\"text-muted\"\r\n                    style=\"font-size: 11px;\">Separare i\r\n                    numeri con una virgola per inserire più\r\n                    giorni (es. 1,5,7... ecc.)</p>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Nel mese di</label>\r\n                <select id=\"hourly-month-dropdown\"\r\n                    class=\"month-dropdown form-control\">\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Giorni della settimana:</label><br>\r\n                <div id=\"hourly-days-of-week\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"daily\" class=\"tab-pane\">\r\n            <div class=\"form-group\">\r\n                <label>Ogni giorno del mese</label>\r\n                <input type=\"text\" id=\"daily-day-of-month\"\r\n                    value=\"*\" class=\"form-control\"\r\n                    oninput=\"validateDayOfMonthInput(this);\">\r\n                <p class=\"text-muted\"\r\n                    style=\"font-size: 11px;\">\r\n                    Separare i numeri con una virgola per\r\n                    inserire più giorni (es. 1,5,7... ecc.)\r\n                </p>\r\n\r\n                <div class=\"form-group\">\r\n                    <label>Alle ore</label>\r\n                    <div class=\"d-inline-flex\">\r\n                        <select\r\n                            class=\"hour-dropdown form-control mr-2\"></select>\r\n                        <label>:</label>\r\n                        <select\r\n                            class=\"minute-dropdown form-control ml-2\"></select>\r\n                        <label>:</label>\r\n                        <select\r\n                            class=\"seconds-dropdown form-control ml-2\"></select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Nel mese di</label>\r\n                    <select id=\"daily-month-dropdown\"\r\n                        class=\"month-dropdown form-control\">\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Giorni della\r\n                        settimana:</label><br>\r\n                    <div id=\"daily-days-of-week\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"weekly\" class=\"tab-pane\">\r\n            <div class=\"form-group\">\r\n                <label>Ogni giorno della settimana:</label><br>\r\n                <div id=\"weekly-days-of-week\"></div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                    <label>Alle ore</label>\r\n                    <div class=\"d-inline-flex\">\r\n                        <select\r\n                            class=\"hour-dropdown form-control mr-2\"></select>\r\n                        <label>:</label>\r\n                        <select\r\n                            class=\"minute-dropdown form-control ml-2\"></select>\r\n                        <label>:</label>\r\n                        <select\r\n                            class=\"seconds-dropdown form-control ml-2\"></select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Nel mese di</label>\r\n                    <select id=\"weekly-month-dropdown\"\r\n                        class=\"month-dropdown form-control\">\r\n                    </select>\r\n                </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"monthly\" class=\"tab-pane\">\r\n            <div class=\"form-group\">\r\n                <label>Ogni mese di</label>\r\n                <select id=\"monthly-month-dropdown\"\r\n                    class=\"month-dropdown form-control\">\r\n\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Giorno</label>\r\n                <input type=\"text\"\r\n                    id=\"monthly-day-of-month-input\"\r\n                    value=\"*\" class=\"form-control\"\r\n                    oninput=\"validateDayOfMonthInput(this);\">\r\n                <p class=\"text-muted\"\r\n                    style=\"font-size: 11px;\">\r\n                    Separare i numeri con una virgola per\r\n                    inserire più giorni (es. 1,5,7... ecc.)\r\n                </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                    <label>Alle ore</label>\r\n                    <div class=\"d-inline-flex\">\r\n                        <select\r\n                            class=\"hour-dropdown form-control mr-2\"></select>\r\n                        <label>:</label>\r\n                        <select\r\n                            class=\"minute-dropdown form-control ml-2\"></select>\r\n                        <label>:</label>\r\n                        <select\r\n                            class=\"seconds-dropdown form-control ml-2\"></select>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div id=\"advanced\" class=\"tab-pane\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <h5>Inserisci l'espressione cron:</h5>\r\n                    <input type=\"text\"\r\n                        id=\"advanced-cron-input\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"*-*-*-*-*-*-*\">\r\n                    <p class=\"text-muted\"\r\n                        style=\"font-size: 11px;\">\r\n                        Formato: [sec]-[minute]-[hour]-\r\n                        [day-of-month]-[month]-\r\n                        [day-of-week]-\r\n                        [year] <br>\r\n                        \" * \": per\r\n                        ogni,\r\n                        \" /x \":\r\n                        periodicità.\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <footer class=\"container\">\r\n        <label>Scheduler #</label>\r\n        <select id=\"scheduler-number\" max-schedulers=\"20\">\r\n            <option value=\"0\">0</option>\r\n        </select>\r\n        <button id=\"generate-scheduler-btn\"\r\n            class=\"btn btn-primary custom-margin\">Genera\r\n            Scheduler</button>\r\n        <button id=\"disable-scheduler-btn\"\r\n            class=\"btn btn-secondary custom-margin\">Disabilita\r\n            Scheduler</button>\r\n        <button id=\"status-scheduler-btn\"\r\n            class=\"btn btn-secondary custom-margin\">Stato\r\n            scheduler</button>\r\n\r\n        <div id=\"expression-output\" class=\"mt-3\"></div>\r\n    </footer>\r\n\r\n    <script\r\n        src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\"\r\n        integrity=\"sha384-oBqDVmMz4fnFO9gybBud7M5jr/zU5kc5zr7U8zN5r5BQUc//kdx6lJp6OM/7KCpR\"\r\n        crossorigin=\"anonymous\"></script>\r\n    <script\r\n        src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js\"\r\n        integrity=\"sha384-KyZXEAg3QhqLMpG8r+Knujsl5/5v5z5rI47t6oW5g5Fp8AQAs5zDumd5fU9XV7p4\"\r\n        crossorigin=\"anonymous\"></script>\r\n</body>\r\n\r\n</html>",
      "templateCss" : ".tab-pane {\r\n    display: none;\r\n}\r\n\r\n.tab-pane.active {\r\n    display: block;\r\n}\r\n\r\n.nav-tabs {\r\n    border-bottom: none;\r\n}\r\n\r\n.nav-tabs .nav-item {\r\n    margin-bottom: -1px;\r\n}\r\n\r\n.nav-tabs .nav-item a {\r\n    color: #6c757d;\r\n    font-weight: 600;\r\n    background-color: #e9ecef;\r\n    border: 1px solid #dee2e6;\r\n    border-radius: 5px 5px 0 0;\r\n    padding: 10px;\r\n    transition: all 0.2s;\r\n    text-decoration: none;\r\n}\r\n\r\n.nav-tabs .nav-item a:hover {\r\n    color: #495057;\r\n    background-color: #f8f9fa;\r\n    border-color: #ced4da;\r\n}\r\n\r\n.nav-tabs .nav-item a.active {\r\n    color: #495057;\r\n    background-color: #ffffff;\r\n    border-color: #dee2e6;\r\n}\r\n\r\n.custom-margin {\r\n    margin-left: 1px;\r\n    margin-right: 1px;\r\n}\r\n\r\n\r\n",
      "controllerScript" : "// Funzione onInit() per inizializzare il widget\r\nself.onInit = function() {\r\n    // Inizializza il widget\r\n    generateDropdownOptions();\r\n    setupEventListeners();\r\n    showTab(\"seconds\");\r\n};\r\n\r\n// Funzione per la gestione della generazione dei menù a tendina e dei checkboxes\r\nfunction generateDropdownOptions() {\r\n    generateTimeDropdownOptions(\"seconds-dropdown\", 60,\r\n        true);\r\n    generateTimeDropdownOptions(\"minute-dropdown\", 60,\r\n        true);\r\n    generateTimeDropdownOptions(\"hour-dropdown\", 24, true);\r\n    generateMonthDropdownOptions(\"month-dropdown\");\r\n    generateDaysOfWeekCheckboxes(\"weekly-days-of-week\");\r\n    generateDaysOfWeekCheckboxes(\"seconds-days-of-week\");    \r\n    generateDaysOfWeekCheckboxes(\"hourly-days-of-week\");    \r\n    generateDaysOfWeekCheckboxes(\"minutes-days-of-week\");\r\n    generateDaysOfWeekCheckboxes(\"daily-days-of-week\");\r\n    generateSchedulerDropdown(\"scheduler-number\", 20);\r\n}\r\n\r\n//Funzione per la generazione dei menù per selezionare gli orari\r\nfunction generateTimeDropdownOptions(className, max, includeZero) {\r\n    var start = includeZero ? 0 : 1;\r\n    var dropdowns = document.getElementsByClassName(className);\r\n    Array.from(dropdowns).forEach(function(dropdown) {\r\n        var option = document.createElement(\"option\");\r\n        option.value = \"*\";\r\n        option.text = \"*\";\r\n        dropdown.add(option);\r\n        for (var i = start; i < max; i++) {\r\n            var option = document.createElement(\"option\");\r\n            option.value = i;\r\n            option.text = (\"0\" + i).slice(-2);\r\n            dropdown.add(option);\r\n        }\r\n    });\r\n}\r\n\r\n// Funzione per la generazione del menù dei mesi\r\nfunction generateMonthDropdownOptions(className) {\r\n    var monthDropdowns = document.getElementsByClassName(\r\n        className);\r\n    var months = [\r\n        \"*\", \"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\",\r\n        \"Maggio\", \"Giugno\",\r\n        \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\",\r\n        \"Novembre\", \"Dicembre\"\r\n    ];\r\n    Array.from(monthDropdowns).forEach(function(\r\n        monthDropdown) {\r\n        for (var i = 0; i < months.length; i++) {\r\n            var option = document.createElement(\r\n                \"option\");\r\n            option.value = months[i];\r\n            option.text = months[i];\r\n            monthDropdown.add(option);\r\n        }\r\n    });\r\n}\r\n\r\n// Funzione per la generazione dei checkbox dei giorni della settimana\r\nfunction generateDaysOfWeekCheckboxes(id) {\r\n    var daysOfWeekContainer = document.getElementById(id);\r\n    if (daysOfWeekContainer) {\r\n        var daysOfWeek = [\"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\",\r\n            \"Sab\", \"Dom\"\r\n        ];\r\n        for (var i = 0; i < daysOfWeek.length; i++) {\r\n            var label = document.createElement(\"label\");\r\n            var checkbox = document.createElement(\"input\");\r\n            checkbox.type = \"checkbox\";\r\n            checkbox.name = \"day-of-week\";\r\n            checkbox.value = i;\r\n            label.appendChild(checkbox);\r\n            label.appendChild(document.createTextNode(\r\n                daysOfWeek[i]));\r\n            daysOfWeekContainer.appendChild(label);\r\n        }\r\n    }\r\n}\r\n\r\n// Funzione per la generazione del menù per selezionare il numero di scheduler\r\nfunction generateSchedulerDropdown(id, max) {\r\n    var schedulerDropdown = document.getElementById(id);\r\n    if (schedulerDropdown) {\r\n        for (var i = 1; i <= max; i++) {\r\n            var option = document.createElement(\"option\");\r\n            option.value = i;\r\n            option.text = i;\r\n            schedulerDropdown.add(option);\r\n        }\r\n    }\r\n}\r\n\r\n// Funzione per la disabilitazione dello scheduler\r\nfunction disableScheduler() {\r\n    var schedulerNumber = document.getElementById(\r\n        \"scheduler-number\").value;\r\n    var cronExpression = \"###AT+SCHD=\" + schedulerNumber +\r\n        \"-0;\";\r\n    var expressionOutput = document.getElementById(\r\n        \"expression-output\");\r\n    expressionOutput.innerHTML = cronExpression;\r\n\r\n    // Invia il comando RPC per disabilitare lo scheduler\r\n    sendRpcCommand('setValue', cronExpression, true);\r\n}\r\n\r\n// Funzione per la recuperare lo status dello scheduler selezionato\r\nfunction getStatusScheduler() {\r\n    var schedulerNumber = document.getElementById(\r\n        \"scheduler-number\").value;\r\n    var command = \"###AT+SCHD=\" + schedulerNumber + \"-?;\";\r\n\r\n    // Invia il comando RPC per ottenere lo stato dello scheduler e passa 'false' per indicare un comando Two Way\r\n    sendRpcCommand('setValue', command, false,\r\n        handleSchedulerStatusResponse);\r\n}\r\n\r\n\r\n// Funzione per la gestione della risponse dal device\r\nfunction handleSchedulerStatusResponse(response) {\r\n    var expressionOutput = document.getElementById(\"expression-output\");\r\n    console.log(response); // Stampa l'intera risposta sulla console\r\n    if (response && response.MSG) {\r\n        expressionOutput.innerHTML = response.MSG;\r\n        console.log(expressionOutput.innerHTML);\r\n    }\r\n}\r\n\r\n\r\n// Funzione per impostare gli event listener per i tab, i pulsanti \"Genera scheduler\", \"Disabilita scheduler\" e \"Stato scheduler\"\r\nfunction setupEventListeners() {\r\n    var tabs = [\r\n        \"seconds\",\r\n        \"minutes\",\r\n        \"hourly\",\r\n        \"daily\",\r\n        \"weekly\",\r\n        \"monthly\",\r\n        \"advanced\"\r\n    ];\r\n\r\n    // Imposta gli event listener per i tab\r\n    tabs.forEach(function(tabName) {\r\n        var tabElement = document.getElementById(\r\n            tabName + \"-tab\");\r\n        if (tabElement) {\r\n            tabElement.addEventListener(\"click\",\r\n                function(event) {\r\n                    event.preventDefault();\r\n                    showTab(tabName);\r\n                });\r\n        }\r\n    });\r\n\r\n    // Imposta l'event listener per il pulsante \"Genera scheduler\"\r\n    var generateSchedulerBtn = document.getElementById(\r\n        \"generate-scheduler-btn\");\r\n    if (generateSchedulerBtn) {\r\n        generateSchedulerBtn.addEventListener(\"click\",\r\n            function(event) {\r\n                event.preventDefault();\r\n                var expression =\r\n                    generateCronExpression();\r\n                sendRpcCommand(\"setValue\", expression,\r\n                    true);\r\n            });\r\n    }\r\n\r\n    // Imposta l'event listener per il pulsante \"Disabilita scheduler\"\r\n    var disableSchedulerBtn = document.getElementById(\r\n        \"disable-scheduler-btn\");\r\n    if (disableSchedulerBtn) {\r\n        disableSchedulerBtn.addEventListener(\"click\",\r\n            function(event) {\r\n                event.preventDefault();\r\n                disableScheduler();\r\n            });\r\n    }\r\n\r\n    // Imposta l'event listener per il pulsante \"Stato scheduler\"\r\n    var statusSchedulerBtn = document.getElementById(\r\n        \"status-scheduler-btn\");\r\n    if (statusSchedulerBtn) {\r\n        statusSchedulerBtn.addEventListener(\"click\",\r\n            function(event) {\r\n                event.preventDefault();\r\n                getStatusScheduler();\r\n            });\r\n    }\r\n}\r\n\r\n// Funzione per la gestione visualizzazione dei tab e aggiorna l'interfaccia utente in base al tab selezionato.\r\nfunction showTab(tabName) {\r\n    // Nascondi tutti i contenuti dei tab\r\n    var tabs = document.querySelectorAll(\"#content > div\");\r\n    for (var i = 0; i < tabs.length; i++) {\r\n        tabs[i].classList.remove(\"active\");\r\n    }\r\n\r\n    // Rimuovi la classe \"active\" da tutti i tab della navbar\r\n    var navItems = document.querySelectorAll(\".nav-item a\");\r\n    for (var i = 0; i < navItems.length; i++) {\r\n        navItems[i].classList.remove(\"active\");\r\n    }\r\n\r\n    // Mostra solo il contenuto del tab selezionato\r\n    var selectedTab = document.getElementById(tabName);\r\n    if (selectedTab) {\r\n        selectedTab.classList.add(\"active\");\r\n    }\r\n\r\n    // Aggiungi la classe \"active\" al tab della navbar corrispondente\r\n    var selectedNavTab = document.getElementById(tabName +\r\n        \"-tab\");\r\n    if (selectedNavTab) {\r\n        selectedNavTab.classList.add(\"active\");\r\n    }\r\n}\r\n\r\n// Funzione per la validazione del giorno del mese inserito\r\nfunction validateDayOfMonthInput(inputValue) {\r\n    if (inputValue === \"*\") {\r\n        return true;\r\n    }\r\n    var intValue = parseInt(inputValue);\r\n    return intValue >= 1 && intValue <= 31;\r\n}\r\n\r\n// Funzione per la generazione dell'espressione cron\r\nfunction generateCronExpression() {\r\n    console.log(\"generateCronExpression called\");\r\n    var schedulerNumber = document.getElementById(\r\n        \"scheduler-number\").value;\r\n    var isEnabled =\r\n        \"1\"; // 1 = abilitato, 0 = disabilitato\r\n\r\n    var second = \"*\";\r\n    var minute = \"*\";\r\n    var hour = \"*\";\r\n    var dayOfMonth = \"*\";\r\n    var month = \"*\";\r\n    var dayOfWeek = \"*\";\r\n    var year = \"*\";\r\n\r\n    var proceed = true;\r\n\r\n    // Verifica quale tab è attivo e imposta i valori di conseguenza\r\n    var activeTab = document.querySelector(\r\n        \"#content > div.active\");\r\n    if (activeTab.id === \"seconds\") {\r\n        var selectedSecond = activeTab.querySelector(\r\n            \".seconds-dropdown\").value;\r\n        var selectedMinute = activeTab.querySelector(\".minute-dropdown\").value;\r\n        var selectedHour = activeTab.querySelector(\".hour-dropdown\").value;\r\n        var selectedDayOfMonth = document.getElementById(\r\n            \"seconds-day-of-month\").value.replace(\r\n            /\\./g, ',');\r\n        var selectedDaysOfWeek = document.querySelectorAll(\r\n            \"#seconds-days-of-week input:checked\");\r\n        var selectedMonthText = document.getElementById(\r\n            \"seconds-month-dropdown\").value;\r\n        var selectedMonth = getMonthNumber(\r\n            selectedMonthText);\r\n            \r\n        if (!validateDayOfMonthInput(selectedDayOfMonth)) {\r\n            alert(\r\n                \"Per favore, inserisci un valore valido (da 1 a 31 o *) nel campo giorno del mese.\"\r\n                );\r\n            proceed = false;\r\n        } else {\r\n            second = \"/\" + selectedSecond;\r\n            minute = selectedMinute;\r\n            hour = selectedHour;\r\n            dayOfMonth = selectedDayOfMonth;\r\n            month = selectedMonth;\r\n            dayOfWeek = selectedDaysOfWeek.length > 0 ? Array.from(selectedDaysOfWeek).map(input => parseInt(input.value) + 1).join(\",\") : '*';\r\n\r\n        }\r\n        \r\n    } else if (activeTab.id === \"minutes\") {\r\n        \r\n        var selectedMinute = activeTab.querySelector(\".minute-dropdown\").value;\r\n        var selectedHour = activeTab.querySelector(\".hour-dropdown\").value;\r\n        var selectedDayOfMonth = document.getElementById(\r\n            \"minutes-day-of-month\").value.replace(\r\n            /\\./g, ',');\r\n        var selectedDaysOfWeek = document.querySelectorAll(\r\n            \"#minutes-days-of-week input:checked\");\r\n        var selectedMonthText = document.getElementById(\r\n            \"minutes-month-dropdown\").value;\r\n        var selectedMonth = getMonthNumber(\r\n            selectedMonthText);\r\n            \r\n        if (!validateDayOfMonthInput(selectedDayOfMonth)) {\r\n            alert(\r\n                \"Per favore, inserisci un valore valido (da 1 a 31 o *) nel campo giorno del mese.\"\r\n                );\r\n            proceed = false;\r\n        } else {\r\n            minute = \"/\" + selectedMinute;\r\n            hour = selectedHour;\r\n            dayOfMonth = selectedDayOfMonth;\r\n            month = selectedMonth;\r\n            dayOfWeek = selectedDaysOfWeek.length > 0 ? Array.from(selectedDaysOfWeek).map(input => parseInt(input.value) + 1).join(\",\") : '*';\r\n        }\r\n        \r\n    } else if (activeTab.id === \"hourly\") {\r\n\r\n        var selectedHour = activeTab.querySelector(\".hour-dropdown\").value;\r\n        var selectedDayOfMonth = document.getElementById(\r\n            \"hourly-day-of-month\").value.replace(\r\n            /\\./g, ',');\r\n        var selectedDaysOfWeek = document.querySelectorAll(\r\n            \"#hourly-days-of-week input:checked\");\r\n        var selectedMonthText = document.getElementById(\r\n            \"hourly-month-dropdown\").value;\r\n        var selectedMonth = getMonthNumber(\r\n            selectedMonthText);\r\n        if (!validateDayOfMonthInput(selectedDayOfMonth)) {\r\n            alert(\r\n                \"Per favore, inserisci un valore valido (da 1 a 31 o *) nel campo giorno del mese.\"\r\n                );\r\n            proceed = false;\r\n        } else {\r\n            hour = \"/\" + selectedHour;\r\n            dayOfMonth = selectedDayOfMonth;\r\n            month = selectedMonth;\r\n            dayOfWeek = selectedDaysOfWeek.length > 0 ? Array.from(selectedDaysOfWeek).map(input => parseInt(input.value) + 1).join(\",\") : '*';\r\n        }\r\n        \r\n    } else if (activeTab.id === \"daily\") {\r\n        var selectedSecond = activeTab.querySelector(\r\n            \".seconds-dropdown\").value;\r\n        var selectedHour = activeTab.querySelector(\r\n            \".hour-dropdown\").value;\r\n        var selectedMinute = activeTab.querySelector(\r\n            \".minute-dropdown\").value;\r\n        var selectedDayOfMonth = document.getElementById(\r\n            \"daily-day-of-month\").value.replace(\r\n            /\\./g, ',');\r\n        var selectedMonthText = document.getElementById(\r\n            \"daily-month-dropdown\").value;\r\n        var selectedMonth = getMonthNumber(\r\n            selectedMonthText);\r\n        var selectedDaysOfWeek = document.querySelectorAll(\r\n            \"#daily-days-of-week input:checked\");\r\n\r\n        if (!validateDayOfMonthInput(selectedDayOfMonth)) {\r\n            alert(\r\n                \"Per favore, inserisci un valore valido (da 1 a 31 o *) nel campo giorno del mese.\"\r\n                );\r\n            proceed = false;\r\n        } else {\r\n            second = selectedSecond;\r\n            hour = selectedHour;\r\n            minute = selectedMinute;\r\n            dayOfMonth = selectedDayOfMonth === \"*\" ? \"*\" :\r\n                \"/\" + selectedDayOfMonth;\r\n            month = selectedMonth;\r\n            dayOfWeek = selectedDaysOfWeek.length > 0 ? Array.from(selectedDaysOfWeek).map(input => parseInt(input.value) + 1).join(\",\") : '*';\r\n        }\r\n        \r\n    } else if (activeTab.id === \"weekly\") {\r\n        var selectedSecond = activeTab.querySelector(\r\n            \".seconds-dropdown\").value;\r\n        var selectedHour = activeTab.querySelector(\r\n            \".hour-dropdown\").value;\r\n        var selectedMinute = activeTab.querySelector(\r\n            \".minute-dropdown\").value;\r\n        var selectedDaysOfWeek = document.querySelectorAll(\r\n            \"#weekly-days-of-week input:checked\");\r\n        var selectedMonthText = document.getElementById(\r\n            \"weekly-month-dropdown\").value;\r\n        var selectedMonth = getMonthNumber(\r\n            selectedMonthText);\r\n        dayOfWeek = selectedDaysOfWeek.length > 0 ? Array.from(selectedDaysOfWeek).map(input => parseInt(input.value) + 1).join(\",\") : '*';\r\n        hour = selectedHour;\r\n        minute = selectedMinute;\r\n        second = selectedSecond;\r\n        month = selectedMonth;\r\n        \r\n    } else if (activeTab.id === \"monthly\") {\r\n        var selectedSecond = activeTab.querySelector(\r\n            \".seconds-dropdown\").value;\r\n        var selectedHour = activeTab.querySelector(\r\n            \".hour-dropdown\").value;\r\n        var selectedMinute = activeTab.querySelector(\r\n            \".minute-dropdown\").value;\r\n        var selectedDayOfMonth = document.getElementById(\r\n            \"monthly-day-of-month-input\").value.replace(\r\n            /\\./g, ',');\r\n        var selectedMonthText = document.getElementById(\r\n            \"monthly-month-dropdown\").value;\r\n        var selectedMonth = getMonthNumber(\r\n            selectedMonthText);\r\n\r\n        if (!validateDayOfMonthInput(selectedDayOfMonth,\r\n                'monthly')) {\r\n            alert(\r\n                \"Per favore, inserisci un valore valido (da 1 a 31 o *) nel campo giorno del mese.\"\r\n                );\r\n            proceed = false;\r\n        } else {\r\n            dayOfMonth = selectedDayOfMonth;\r\n            month = \"/\" + selectedMonth;\r\n            hour = selectedHour;\r\n            minute = selectedMinute;\r\n            second = selectedSecond;\r\n        }\r\n    } else if (activeTab.id === \"advanced\") {\r\n        var advancedCronExpression = document\r\n            .getElementById(\"advanced-cron-input\").value;\r\n        var cronParts = advancedCronExpression.split(\"-\");\r\n\r\n        if (cronParts.length !== 7) {\r\n            alert(\r\n                \"Per favore, inserisci un'espressione cron valida nel formato *-*-*-*-*-*-*.\");\r\n            proceed = false;\r\n        } else {\r\n            second = cronParts[0];\r\n            minute = cronParts[1];\r\n            hour = cronParts[2];\r\n            dayOfMonth = cronParts[3];\r\n            month = cronParts[4];\r\n            dayOfWeek = cronParts[5];\r\n            year = cronParts[6];\r\n        }\r\n    }\r\n\r\n\r\n    if (!proceed) {\r\n        return;\r\n    }\r\n\r\n    // Costruisci l'espressione cron completa\r\n    var cronExpression = \"###AT+SCHD=\" + schedulerNumber +\r\n        \"-\" + isEnabled + \"-\" + second + \"-\" + minute +\r\n        \"-\" + hour + \"-\" + dayOfMonth + \"-\" + month +\r\n        \"-\" + dayOfWeek + \"-\" + year + \";\";\r\n\r\n\r\n    // Visualizza l'espressione cron generata\r\n    var expressionOutput = document.getElementById(\r\n        \"expression-output\");\r\n    expressionOutput.innerHTML = cronExpression;\r\n\r\n    return cronExpression; // Return dell'espressione generata\r\n}\r\n\r\n// Funzione per ottenere il numero del mese in base al nome completo\r\nfunction getMonthNumber(monthName) {\r\n    var monthNames = {\r\n        '*': \"*\",\r\n        'Gennaio': 1,\r\n        'Febbraio': 2,\r\n        'Marzo': 3,\r\n        'Aprile': 4,\r\n        'Maggio': 5,\r\n        'Giugno': 6,\r\n        'Luglio': 7,\r\n        'Agosto': 8,\r\n        'Settembre': 9,\r\n        'Ottobre': 10,\r\n        'Novembre': 11,\r\n        'Dicembre': 12\r\n    };\r\n\r\n    return monthNames[monthName] === '*' ? '*' : parseInt(monthNames[monthName]);\r\n}\r\n\r\n\r\n// Funzione per l'invio del comando RPC (oneway o twoway)\r\nfunction sendRpcCommand(rpcMethod, expression,\r\n    oneWayElseTwoWay, callback) {\r\n    var rpcParams = expression;\r\n    var timeout = 5000; // Imposta il timeout desiderato\r\n\r\n    var commandObservable;\r\n    if (oneWayElseTwoWay) {\r\n        commandObservable = self.ctx.controlApi\r\n            .sendOneWayCommand(rpcMethod, rpcParams,\r\n                timeout);\r\n    } else {\r\n        commandObservable = self.ctx.controlApi\r\n            .sendTwoWayCommand(rpcMethod, rpcParams,\r\n                timeout);\r\n    }\r\n    commandObservable.subscribe(\r\n        function(response) {\r\n            if (oneWayElseTwoWay) {\r\n                console.log(\r\n                    \"Command was successfully received by device. No response body because of one way command mode.\"\r\n                );\r\n            } else {\r\n                console.log(\"Response from device:\",\r\n                    response);\r\n                if (callback) {\r\n                    callback(response);\r\n                }\r\n            }\r\n        },\r\n        function(rejection) {\r\n            console.log(\r\n                \"Failed to send command to the device: Status:\",\r\n                rejection.status, \"Status text:\",\r\n                rejection.statusText);\r\n        }\r\n    );\r\n}",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"timer\",\"dropShadow\":true,\"targetDeviceAliases\":[]}"
    },
    "bundleAlias" : "alberto_test",
    "createdTime" : 1677860357288,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "254b2280-b9df-11ed-a76d-9955dd563d2d"
    },
    "tenantId" : {
      "entityType" : "TENANT",
      "id" : "64ee8810-2de8-11ed-9397-cd2dc17441ed"
    }
  } ],
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}